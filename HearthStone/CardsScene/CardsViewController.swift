//
//  CardsViewController.swift
//  HearthStone
//
//  Created by Diego Gomes on 29/04/20.
//  Copyright (c) 2020 Diego Gomes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CardsDisplayLogic: class {
    func displayCards(viewModel: Cards.FetchCards.ViewModel)
}

class CardsViewController: UICollectionViewController, CardsDisplayLogic {
    var interactor: CardsBusinessLogic?
    var request: Cards.FetchCards.Request!
    var cards = Cards.FetchCards.ViewModel(cardImages: [])
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = CardsInteractor()
        let presenter = CardsPresenter()
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        collectionView.backgroundColor = .white
        collectionView.register(CardCollectionViewCell.self)
        setup()
        fetchCards()
    }
    
    convenience required init(request: Cards.FetchCards.Request) {
        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        self.init(collectionViewLayout: layout)
        self.request = request
    }
    
    // MARK: Fetch Cards
    func fetchCards() {
        interactor?.fetchCards(request: request)
    }
    
    func displayCards(viewModel: Cards.FetchCards.ViewModel) {
        cards = viewModel
        collectionView.reloadData()
    }
}

extension CardsViewController: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView,
                        layout collectionViewLayout: UICollectionViewLayout,
                        sizeForItemAt indexPath: IndexPath) -> CGSize {
        let width = UIScreen.main.bounds.width/CGFloat(2) - 20.0
        return CGSize(width: width, height: 230)
    }

    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return cards.cardImages.count
    }
    
    override func collectionView(_ collectionView: UICollectionView,
                        cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(CardCollectionViewCell.self, indexPath: indexPath)
        cell.set(imgUrl: cards.cardImages[indexPath.item])
        return cell
    }
}
